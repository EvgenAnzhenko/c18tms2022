package by.tms.service;

import by.tms.model.Car;
//2) задача!
    /*
 Напишите структуру классов и продемонстрируйте работу
 - Машина имеет двигатель, бензобак (реализуйте класс для каждой сущности).
 - Чтобы поехать, машину необходимо завести, т.е. включить двигатель.
 - Реализуйте методы включения машины, который в свою очередь включает её двигатель.
 - Реализуйте метод езды на машине (например просто печатаем на консоль, что машина поехала)
 - Если машина не заведена, ехать она не может.
 - Машину можно заглушить.
 - После каждой поездки считаем, что машина прошла фиксированное расстояние.
 - Реализовать возможность посмотреть, какое расстояние машина прошла за все время.
 - Чтобы создать машину обязательно нужно иметь двигатель и бензобак.
 - Марка машины, год выпуска, пройденное расстояние - не обязательны при создании машины и могут быть выставлены потом.
 (не обязательно задавать в конструкторе)
 - После создания поменять двигатель машине нельзя.
 - Чтобы машина завелась, у неё должно быть топливо в бензобаке, если топлива нет, машина не может завестись.
 - Машину можно дозаправить, можно проверить сколько топлива осталось.
 - Реализуйте пару полей для двигателя и бензобака, например: тип двигателя, общий объем бензобака,
 сколько бензина сейчас и т.д.
     */

public class Main {
    public static void main(String[] args) throws InterruptedException {
        Car newCar = new Car("Бензиновый", 60);
        //первая поездка

        System.out.println("Одометр до поездки " + newCar.getOdometer());
        newCar.gasStation(20);
        newCar.carStart();
        newCar.go();
        Thread.sleep((long) (0 + Math.random() * 11000)); // Рандомное время на поездку
        newCar.carStop();
        System.out.println("Одометр за эту поездку " + newCar.getOdometerOne());
        System.out.println("Одометр " + newCar.getOdometer());

        //вторая поездка

        newCar.carStart();
        newCar.go();
        Thread.sleep((long) (0 + Math.random() * 11000));
        newCar.carStop();
        System.out.println("Одометр за эту поездку " + newCar.getOdometerOne());
        System.out.println("Общий одометр " + newCar.getOdometer());
    }
}
